View(divStats)
div
getDivStats <- function(OTUtable, taxonomy, phy = "All", nrank = "Orders"){
if(phy == "All"){
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy), ]
}else{
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy[taxonomy$Phylum == phy, ]), ]
}
if(nrow(OTUtable > 5)){
Richness <- apply(OTUtable, 2, function(x) sum(x > 0))
Abundance <- colSums(OTUtable)
Shannon <- diversity(OTUtable, 2, index = "shannon")
#Richness1 <- apply(OTUdata, 2, function(x) d(x, lev = "alpha", q = 0))
EffAlpha <- apply(OTUtable, 2, function(x) d(x, lev = "alpha", q = 1))
nRanks <- countRanks(OTUtable, taxonomy, nrank)
## ...insert other biodiversity calculations in here
data <- as.data.frame(cbind(Richness, Abundance, Shannon, EffAlpha, nRanks))
}
return(data)
}
divStats <- data.frame()
for(gene in c("16S","18S","ITS","COI-300")){
inputData <- getData(dataPath, gene)
phyla <- unique(as.character(inputData[[2]]$Phylum))
phyla <- c("All", phyla[phyla %in% ranksRef$Phyla])
for(phy in phyla){
print(paste(gene, phy))
div <- getDivStats(OTUtable = inputData[[1]], taxonomy = inputData[[2]], phy = phy)
div$Gene <- gene
div$Plot <- rownames(div)
div$Phylum <- phy
div$landuseCode <- "I" # Landuse specification likely to differ among datasets...
div$Elevation <- metadata$Elevation[match(div$Plot, rownames(metadata))]
divStats <- rbind(div, divStats)
}
}
divStats <- do.call("rbind", divStats)
gene
phy
div
OTUtable = inputData[[1]]
taxonomy = inputData[[2]]
phy = phy
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy[taxonomy$Phylum == phy, ]), ]
nrow(OTUtable > 5)
dim(OTUtable)
nrow(OTUtable)
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy[taxonomy$Phylum == phy, ]), ]
nrow(OTUtable > 5)
nrow(OTUtable) > 5
getDivStats <- function(OTUtable, taxonomy, phy = "All", nrank = "Orders"){
if(phy == "All"){
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy), ]
}else{
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy[taxonomy$Phylum == phy, ]), ]
}
if(nrow(OTUtable) > 5){
Richness <- apply(OTUtable, 2, function(x) sum(x > 0))
Abundance <- colSums(OTUtable)
Shannon <- diversity(OTUtable, 2, index = "shannon")
#Richness1 <- apply(OTUdata, 2, function(x) d(x, lev = "alpha", q = 0))
EffAlpha <- apply(OTUtable, 2, function(x) d(x, lev = "alpha", q = 1))
nRanks <- countRanks(OTUtable, taxonomy, nrank)
## ...insert other biodiversity calculations in here
data <- as.data.frame(cbind(Richness, Abundance, Shannon, EffAlpha, nRanks))
}
return(data)
}
divStats <- data.frame()
for(gene in c("16S","18S","ITS","COI-300")){
inputData <- getData(dataPath, gene)
phyla <- unique(as.character(inputData[[2]]$Phylum))
phyla <- c("All", phyla[phyla %in% ranksRef$Phyla])
for(phy in phyla){
print(paste(gene, phy))
div <- getDivStats(OTUtable = inputData[[1]], taxonomy = inputData[[2]], phy = phy)
div$Gene <- gene
div$Plot <- rownames(div)
div$Phylum <- phy
div$landuseCode <- "I" # Landuse specification likely to differ among datasets...
div$Elevation <- metadata$Elevation[match(div$Plot, rownames(metadata))]
divStats <- rbind(div, divStats)
}
}
divStats <- do.call("rbind", divStats)
nrow(OTUtable)div
div
getDivStats(OTUtable = inputData[[1]], taxonomy = inputData[[2]], phy = phy)
divStats <- data.frame()
for(gene in c("16S","18S","ITS","COI-300")){
inputData <- getData(dataPath, gene)
phyla <- unique(as.character(inputData[[2]]$Phylum))
phyla <- c("All", phyla[phyla %in% ranksRef$Phyla])
for(phy in phyla){
print(paste(gene, phy))
x <- getDivStats(OTUtable = inputData[[1]], taxonomy = inputData[[2]], phy = phy)
x$Gene <- gene
x$Plot <- rownames(x)
x$Phylum <- phy
x$landuseCode <- "I" # Landuse specification likely to differ among datasets...
x$Elevation <- metadata$Elevation[match(div$Plot, rownames(metadata))]
divStats <- rbind(divStats, x)
}
}
x
x$Elevation <- metadata$Elevation[match(x$Plot, rownames(metadata))]
divStats <- data.frame()
for(gene in c("16S","18S","ITS","COI-300")){
inputData <- getData(dataPath, gene)
phyla <- unique(as.character(inputData[[2]]$Phylum))
phyla <- c("All", phyla[phyla %in% ranksRef$Phyla])
for(phy in phyla){
print(paste(gene, phy))
x <- getDivStats(OTUtable = inputData[[1]], taxonomy = inputData[[2]], phy = phy)
x$Gene <- gene
x$Plot <- rownames(x)
x$Phylum <- phy
x$landuseCode <- "I" # Landuse specification likely to differ among datasets...
x$Elevation <- metadata$Elevation[match(x$Plot, rownames(metadata))]
divStats <- rbind(divStats, x)
}
}
x
gene
x$Gene <- gene
x$Gene
head(x)
x <- getDivStats(OTUtable = inputData[[1]], taxonomy = inputData[[2]], phy = phy)
x
phy
getDivStats(OTUtable = inputData[[1]], taxonomy = inputData[[2]], phy = phy)
getDivStats <- function(OTUtable, taxonomy, phy = "All", nrank = "Orders"){
if(phy == "All"){
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy), ]
}else{
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy[taxonomy$Phylum == phy, ]), ]
}
if(nrow(OTUtable) > 5){
Richness <- apply(OTUtable, 2, function(x) sum(x > 0))
Abundance <- colSums(OTUtable)
Shannon <- diversity(OTUtable, 2, index = "shannon")
#Richness1 <- apply(OTUdata, 2, function(x) d(x, lev = "alpha", q = 0))
EffAlpha <- apply(OTUtable, 2, function(x) d(x, lev = "alpha", q = 1))
nRanks <- countRanks(OTUtable, taxonomy, nrank)
## ...insert other biodiversity calculations in here
x <- as.data.frame(cbind(Richness, Abundance, Shannon, EffAlpha, nRanks))
x$Taxon <- phy
return(x)
}
}
countRanks <- function(OTUtable, taxonomy, nrank = "Orders"){
df <- data.frame(row.names = colnames(OTUtable))
df[, rank] <- 0
if(nrank == "Phyla"){
r <- "Phylum"
}else if(nrank == "Classes"){
r <- "Class"
}else if(nrank == "Families"){
r <- "Family"
}else if(nrank == "Orders"){
r <- "Order"
}else if(nrank == "Genera"){
r <- "Genus"
}
for(n in colnames(OTUtable)){
col <- OTUtable[, n, drop = FALSE]
count <- length(unique(taxonomy[, r][taxonomy[, r] %in% ranksRef[[rank]]][rownames(taxonomy) %in% rownames(col)[col > 1]]))
df[, rank][rownames(df) == n] <- count
}
return(df)
}
getDivStats <- function(OTUtable, taxonomy, nrank = "Orders"){
Richness <- apply(OTUtable, 2, function(x) sum(x > 0))
Abundance <- colSums(OTUtable)
Shannon <- diversity(OTUtable, 2, index = "shannon")
#Richness1 <- apply(OTUdata, 2, function(x) d(x, lev = "alpha", q = 0))
EffAlpha <- apply(OTUtable, 2, function(x) d(x, lev = "alpha", q = 1))
nRanks <- countRanks(OTUtable, taxonomy, nrank)
## ...insert other biodiversity calculations in here
x <- as.data.frame(cbind(Richness, Abundance, Shannon, EffAlpha, nRanks))
return(x)
}
divStats <- data.frame()
for(gene in c("16S","18S","ITS","COI-300")){
inputData <- getData(dataPath, gene)
OTUtable = inputData[[1]]
taxonomy = inputData[[2]]
phyla <- unique(as.character(taxonomy$Phylum))
phyla <- c("All", phyla[phyla %in% ranksRef$Phyla])
for(phy in phyla){
if(phy == "All"){
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy), ]
}else{
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy[taxonomy$Phylum == phy, ]), ]
}
if(nrow(OTUtable) > 5){
print(paste(gene, phy))
x <- getDivStats(OTUtable = inputData[[1]], taxonomy = inputData[[2]], phy = phy)
x$Gene <- gene
x$Plot <- rownames(x)
x$Phylum <- phy
x$landuseCode <- "I" # Landuse specification likely to differ among datasets...
x$Elevation <- metadata$Elevation[match(x$Plot, rownames(metadata))]
divStats <- rbind(divStats, x)
}
}
}
divStats <- data.frame()
for(gene in c("16S","18S","ITS","COI-300")){
inputData <- getData(dataPath, gene)
OTUtable = inputData[[1]]
taxonomy = inputData[[2]]
phyla <- unique(as.character(taxonomy$Phylum))
phyla <- c("All", phyla[phyla %in% ranksRef$Phyla])
for(phy in phyla){
if(phy == "All"){
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy), ]
}else{
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy[taxonomy$Phylum == phy, ]), ]
}
if(nrow(OTUtable) > 5){
print(paste(gene, phy))
x <- getDivStats(OTUtable, taxonomy)
x$Gene <- gene
x$Taxon <- phy
x$Plot <- rownames(x)
x$Phylum <- phy
x$landuseCode <- "I" # Landuse specification likely to differ among datasets...
x$Elevation <- metadata$Elevation[match(x$Plot, rownames(metadata))]
divStats <- rbind(divStats, x)
}
}
}
df <- data.frame(row.names = colnames(OTUtable))
countRanks <- function(OTUtable, taxonomy, nrank = "Orders"){
df <- data.frame(row.names = colnames(OTUtable))
df[, nrank] <- 0
if(nrank == "Phyla"){
r <- "Phylum"
}else if(nrank == "Classes"){
r <- "Class"
}else if(nrank == "Families"){
r <- "Family"
}else if(nrank == "Orders"){
r <- "Order"
}else if(nrank == "Genera"){
r <- "Genus"
}
for(n in colnames(OTUtable)){
col <- OTUtable[, n, drop = FALSE]
count <- length(unique(taxonomy[, r][taxonomy[, r] %in% ranksRef[[nrank]]][rownames(taxonomy) %in% rownames(col)[col > 1]]))
df[, nrank][rownames(df) == n] <- count
}
return(df)
}
getDivStats <- function(OTUtable, taxonomy, nrank = "Orders"){
Richness <- apply(OTUtable, 2, function(x) sum(x > 0))
Abundance <- colSums(OTUtable)
Shannon <- diversity(OTUtable, 2, index = "shannon")
#Richness1 <- apply(OTUdata, 2, function(x) d(x, lev = "alpha", q = 0))
EffAlpha <- apply(OTUtable, 2, function(x) d(x, lev = "alpha", q = 1))
nRanks <- countRanks(OTUtable, taxonomy, nrank)
## ...insert other biodiversity calculations in here
x <- as.data.frame(cbind(Richness, Abundance, Shannon, EffAlpha, nRanks))
return(x)
}
divStats <- data.frame()
for(gene in c("16S","18S","ITS","COI-300")){
inputData <- getData(dataPath, gene)
OTUtable = inputData[[1]]
taxonomy = inputData[[2]]
phyla <- unique(as.character(taxonomy$Phylum))
phyla <- c("All", phyla[phyla %in% ranksRef$Phyla])
for(phy in phyla){
if(phy == "All"){
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy), ]
}else{
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy[taxonomy$Phylum == phy, ]), ]
}
if(nrow(OTUtable) > 5){
print(paste(gene, phy))
x <- getDivStats(OTUtable, taxonomy)
x$Gene <- gene
x$Taxon <- phy
x$Plot <- rownames(x)
x$Phylum <- phy
x$landuseCode <- "I" # Landuse specification likely to differ among datasets...
x$Elevation <- metadata$Elevation[match(x$Plot, rownames(metadata))]
divStats <- rbind(divStats, x)
}
}
}
phyla
OTUtable <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy[taxonomy$Phylum == phy, ]), ]
phy
taxonomy$Phylum
rownames(taxonomy[taxonomy$Phylum == phy, ])
divStats <- data.frame()
for(gene in c("16S","18S","ITS","COI-300")){
inputData <- getData(dataPath, gene)
OTUtable = inputData[[1]]
taxonomy = inputData[[2]]
phyla <- unique(as.character(taxonomy$Phylum))
phyla <- c("All", phyla[phyla %in% ranksRef$Phyla])
for(phy in phyla){
if(phy == "All"){
OTUtable.x <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy), ]
}else{
OTUtable.x <- OTUtable[rownames(OTUtable) %in% rownames(taxonomy[taxonomy$Phylum == phy, ]), ]
}
if(nrow(OTUtable.x) > 5){
print(paste(gene, phy))
x <- getDivStats(OTUtable.x, taxonomy)
x$Gene <- gene
x$Taxon <- phy
x$Plot <- rownames(x)
x$Phylum <- phy
x$landuseCode <- "I" # Landuse specification likely to differ among datasets...
x$Elevation <- metadata$Elevation[match(x$Plot, rownames(metadata))]
divStats <- rbind(divStats, x)
}
}
}
View(divStats)
divStats$phy <- NULL
divStats$Phylum <- NULL
divStatsTidy <- gather(divStats, variable, value, -Gene, -Plot, -Elevation, -landuseCode, -Taxon)
head(divStatsTidy)
divStatsTidy$variable <- gsub("Abundance", "Sequence abundance", divStatsTidy$variable)
divStatsTidy$variable <- gsub("EffAlpha", "Effective alpha diversity", divStatsTidy$variable)
divStatsTidy$variable <- gsub("Shannon", "Shannon diversity", divStatsTidy$variable)
divStatsTidy$variable <- gsub("Richness", "OTU richness", divStatsTidy$variable)
View(divStatsTidy)
divStatsTidy$Taxon[divStatsTidy$Taxon == "All" & divStatsTidy$Gene == "16S"]
divStatsTidy$Taxon[divStatsTidy$Taxon == "All" & divStatsTidy$Gene == "16S"] <- "All Prokaryotes"
divStatsTidy$Taxon[divStatsTidy$Taxon == "All" & divStatsTidy$Gene == "18S"] <- "All Eukaryotes"
divStatsTidy$Taxon[divStatsTidy$Taxon == "All" & divStatsTidy$Gene == "ITS"] <- "All Fungi"
divStatsTidy$Taxon[divStatsTidy$Taxon == "All" & divStatsTidy$Gene == "COI"] <- "All Metazoa"
write.table(divStatsTidy, file = paste0(dataPath, "All_divStats_tidy_by_phy.txt"), sep = "\t", quote = FALSE, row.names = FALSE)
citation()
citation("vegan")
citation("vegetarian")
citation("ape")
?shuffle
?random
?rand
?sample
seq(1:13)
sample(seq(1:13))
sample(seq(1:13))
sample(seq(1:13))
sample(seq(1:13))
sample(seq(1:13))
sample(seq(1:13))
sample(seq(1:13))
d <- dataframe(matrix(ncol = 13))
d <- as.data.frame(matrix(ncol = 13))
d
for(i in seq(1:5)){}
for(i in seq(1:5)){}
s <- sample(seq(1:13))
s
as.data.frame(s)
d <- data.frame(matrix(nrow = seq(1:13)))
d <- data.frame(matrix(nrow = 13))
d
d <- data.frame(matrix(nrow = 13, ncol = 0))
d
for(i in seq(1:5)){
s <- as.data.frame(sample(seq(1:13)))
d <- cbind(d, s)
}
d
d <- data.frame(matrix(nrow = 13, ncol = 0))
for(i in seq(1:10)){
s <- as.data.frame(sample(seq(1:13)))
colnames(s) <- paste("sample_", i)
d <- cbind(d, s)
}
View(d)
write.table(d, file = "Random_order_13.txt", sep = "\t", rownames = NA)
write.table(d, file = "Random_order_13.txt", sep = "\t", col.names = NA)
getwd()
library(ape)
library(ggplot2)
library(gridExtra)
library(phyloseq)
library(reshape2)
#library(RColorBrewer)
library(scales)
library(vegan)
#library(vegetarian)
theme_set(theme_bw(base_size = 10))
###############################################################################
# Load all the data
#setwd("G:/Documents/PhD/Sanger_vs_454_COI_stuff/Sanger_OTUs_analysis")
setwd("G:/Documents/GitHub/Barcoding_invertebrate_biodiversity/")
# Invertebrate DNA barcoding summary data:
# Successful barcoding results:
barcodes <- read.table("Invert_DNA_barcode_data/28S+COI_sequence_taxonomy.txt",
sep = "\t", header = TRUE, check.names = FALSE)
# Unsuccesful barcoding attempts
fails <- read.table("Invert_DNA_barcode_data/Barcode_failures.txt",
sep = "\t", header = TRUE, check.names = FALSE)
# OTU tables:
OTUtable.COI <- read.table("Invert_DNA_barcode_data/COI_366_OTUtable.txt",
header = TRUE, row.names = 1, sep = "\t", check.names=FALSE)
OTUtable.COI <- t(OTUtable.COI)
OTUtable.COI <- OTUtable.COI[order(rownames(OTUtable.COI)),]
OTUtable.28S <- read.table("Invert_DNA_barcode_data/28S_247_OTUtable.txt",
header = TRUE, row.names = 1, sep = "\t", check.names=FALSE)
OTUtable.28S <- t(OTUtable.28S)
OTUtable.28S <- OTUtable.28S[order(rownames(OTUtable.28S)),]
# OTU taxonomy data:
taxatable.COI <- read.table("Invert_DNA_barcode_data/COI_366_OTU_centroid_taxatable.txt",
sep="\t", header=T, row.names=1)
taxatable.28S <- read.table("Invert_DNA_barcode_data/28S_247_OTU_centroid_taxatable.txt",
sep="\t", header=T, row.names=1)
Orders <- c("Protostomia","Arthropoda","Arachnida","Araneae","Opiliones","Pseudoscorpiones",
"Myriapoda","Pauropoda","Symphyla","Geophilomorpha","Lithobiomorpha","Diplopoda",
"Polydesmida","Spirostreptida",
"Amphipoda","Isopoda","Diplura","Collembola","Archaeognatha",
"Endopterygota","Neoptera","Lepidoptera","Coleoptera","Diptera","Hymenoptera","Neuroptera",
"Siphonaptera","Blattodea","Orthoptera","Phasmatodea","Hemiptera","Psocoptera","Thysanoptera",
"Haplotaxida","Gastropoda","Onychophora")
taxatable.COI$Order <- factor(taxatable.COI$Order, levels = Orders, ordered = TRUE)
taxatable.28S$Order <- factor(taxatable.28S$Order, levels = Orders, ordered = TRUE)
# Phylo trees:
tree.COI <- read.tree("Invert_DNA_barcode_data/RAxML_bestTree.COI_good_LCA_366_OTUs_tree_GTRGAMMA")
tree.28S <- read.tree("Invert_DNA_barcode_data/RAxML_bestTree.28S_good_LCA_247_OTUs_tree_GTRGAMMA")
#str(tree.COI)
#str(tree.28S)
# Sample metadata:
samples <- read.table("Invert_DNA_barcode_data/LBI_Pilot_chem_elevation_data.txt",
sep="\t", header=T, row.names=1)
samples <- samples[order(rownames(samples)),]
samples$PlotN <- gsub("Plot-[A-Z]", "", samples$Plot)
samples$PlotN <- factor(samples$PlotN, ordered = TRUE,
levels = c("01","02","03","04","05","06","07","08","09","10"))
samples$Plot_Method <- paste(samples$Method, samples$Plot)
samples$Plot_Method <- factor(samples$Plot_Method, ordered = TRUE)
# OTU top BLAST matches:
bl <- read.table("Invert_DNA_barcode_data/28S+COI_OTUs_top_blast_matches_organised.txt",
header = TRUE, row.names = 1, sep = "\t", check.names = FALSE)
# 454 soil DNA OTU table and taxonomy for biodiversity estimates
OTUtable.454 <- read.table("Soil_DNA_454_data/COI_454_inverts_OTUtable_byPlot.txt",
sep = "\t", header = TRUE, row.names = 1)
#OTUtable.454 <- t(OTUtable.454)
taxonomy.454 <- read.table("Soil_DNA_454_data/COI_454_inverts_taxonomy.txt",
sep = "\t", header = TRUE, row.names = 1)
df.dist.COI <- vegdist(OTUtable.COI, method = "jaccard", binary = TRUE)
mds.COI <- metaMDS(df.dist.COI, k = 2)
pts_mds.COI <- as.data.frame(mds.COI$points)
stress_mds.COI <- mds.COI$stress
pts_mds.COI <- get_labels(pts_mds.COI)
get_labels <- function(pts_mds){
pts_mds$plots <- sapply(strsplit(rownames(pts_mds), "_"), "[", 1)
pts_mds$plots <- gsub("-", " ", pts_mds$plots)
pts_mds$plots <- ordered(pts_mds$plots, levels = c("Plot 1", "Plot 2", "Plot 3", "Plot 4", "Plot 5",
"Plot 6", "Plot 7", "Plot 8", "Plot 9", "Plot 10"))
pts_mds$methods <- sapply(strsplit(rownames(pts_mds), "_"), "[[", 2)
pts_mds$methods <- gsub("-", " ", pts_mds$methods)
return(pts_mds)
}
# COI:
df.dist.COI <- vegdist(OTUtable.COI, method = "jaccard", binary = TRUE)
mds.COI <- metaMDS(df.dist.COI, k = 2)
pts_mds.COI <- as.data.frame(mds.COI$points)
stress_mds.COI <- mds.COI$stress
pts_mds.COI <- get_labels(pts_mds.COI)
# 28S:
df.dist.28S <- vegdist(OTUtable.28S, method = "jaccard", binary = TRUE)
mds.28S <- metaMDS(df.dist.28S, k = 2)
pts_mds.28S <- as.data.frame(mds.28S$points)
stress_mds.28S <- mds.28S$stress
pts_mds.28S <- get_labels(pts_mds.28S)
#
samples1 <- sample_data(samples)
OTUtable.COI <- otu_table(OTUtable.COI, taxa_are_rows=FALSE)
taxatable.COI <- tax_table(as.matrix(taxatable.COI))
phylo_COI <- phyloseq(OTUtable.COI, samples1, tree.COI, taxatable.COI)
phylo_COI
OTUtable.28S <- otu_table(OTUtable.28S, taxa_are_rows=FALSE)
taxatable.28S <- tax_table(as.matrix(taxatable.28S))
phylo_28S <- phyloseq(OTUtable.28S, samples1, tree.28S, taxatable.28S)
phylo_28S
# COI UniFrac:
set.seed(345)
unifrac.COI <- UniFrac(phylo_COI, weighted=FALSE, normalized=TRUE)
mds.COI.unifrac <- metaMDS(unifrac.COI)
pts.COI.unifrac <- as.data.frame(mds.COI.unifrac$points)
stress_mds.COI.unifrac <- mds.COI.unifrac$stress
pts.COI.unifrac <- get_labels(pts.COI.unifrac)
set.seed(456)
unifrac.28S <- UniFrac(phylo_28S, weighted=FALSE, normalized=TRUE)
mds.28S.unifrac <- metaMDS(unifrac.28S)
pts.28S.unifrac <- as.data.frame(mds.28S.unifrac$points)
stress_mds.28S.unifrac <- mds.28S.unifrac$stress
pts.28S.unifrac <- get_labels(pts.28S.unifrac)
unifrac.28S
adonis(df.dist.COI ~ Method * Elevation, samples)
adonis(df.dist.28S ~ Method * Elevation, samples)
adonis(unifrac_COI ~ Method * Elevation, samples)
set.seed(345)
unifrac.COI <- UniFrac(phylo_COI, weighted=FALSE, normalized=TRUE)
mds.COI.unifrac <- metaMDS(unifrac.COI)
pts.COI.unifrac <- as.data.frame(mds.COI.unifrac$points)
stress_mds.COI.unifrac <- mds.COI.unifrac$stress
pts.COI.unifrac <- get_labels(pts.COI.unifrac)
adonis(unifrac_COI ~ Method * Elevation, samples)
adonis(unifrac.COI ~ Method * Elevation, samples)
adonis(unifrac.28S ~ Method * Elevation, samples)
